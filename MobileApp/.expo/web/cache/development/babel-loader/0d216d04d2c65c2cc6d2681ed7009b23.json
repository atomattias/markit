{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction FormImagePicker(_ref) {\n  var name = _ref.name;\n  var _useFormikContext = useFormikContext(),\n    errors = _useFormikContext.errors,\n    setFieldValue = _useFormikContext.setFieldValue,\n    touched = _useFormikContext.touched,\n    values = _useFormikContext.values;\n  var imageUris = values[name];\n  var handleAdd = function handleAdd(uri) {\n    setFieldValue(name, [].concat(_toConsumableArray(imageUris), [uri]));\n  };\n  var handleRemove = function handleRemove(uri) {\n    setFieldValue(name, imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ImageInputList, {\n      imageUris: imageUris,\n      onAddImage: handleAdd,\n      onRemoveImage: handleRemove\n    }), _jsx(ErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\nexport default FormImagePicker;","map":{"version":3,"names":["React","useFormikContext","ErrorMessage","ImageInputList","FormImagePicker","name","errors","setFieldValue","touched","values","imageUris","handleAdd","uri","handleRemove","filter","imageUri"],"sources":["/Users/salt-dev/bootCamp/week12/reuse/Final-Project/MobileApp/app/components/forms/FormImagePicker.js"],"sourcesContent":["import React from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\n\nfunction FormImagePicker({ name }) {\n  const { errors, setFieldValue, touched, values } = useFormikContext();\n  const imageUris = values[name];\n\n  const handleAdd = (uri) => {\n    setFieldValue(name, [...imageUris, uri]);\n  };\n\n  const handleRemove = (uri) => {\n    setFieldValue(\n      name,\n      imageUris.filter((imageUri) => imageUri !== uri)\n    );\n  };\n\n  return (\n    <>\n      <ImageInputList\n        imageUris={imageUris}\n        onAddImage={handleAdd}\n        onRemoveImage={handleRemove}\n      />\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\n    </>\n  );\n}\n\nexport default FormImagePicker;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,OAAOC,YAAY;AACnB,OAAOC,cAAc;AAA0B;AAAA;AAAA;AAE/C,SAASC,eAAe,OAAW;EAAA,IAARC,IAAI,QAAJA,IAAI;EAC7B,wBAAmDJ,gBAAgB,EAAE;IAA7DK,MAAM,qBAANA,MAAM;IAAEC,aAAa,qBAAbA,aAAa;IAAEC,OAAO,qBAAPA,OAAO;IAAEC,MAAM,qBAANA,MAAM;EAC9C,IAAMC,SAAS,GAAGD,MAAM,CAACJ,IAAI,CAAC;EAE9B,IAAMM,SAAS,GAAG,SAAZA,SAAS,CAAIC,GAAG,EAAK;IACzBL,aAAa,CAACF,IAAI,+BAAMK,SAAS,IAAEE,GAAG,GAAE;EAC1C,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAID,GAAG,EAAK;IAC5BL,aAAa,CACXF,IAAI,EACJK,SAAS,CAACI,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,KAAKH,GAAG;IAAA,EAAC,CACjD;EACH,CAAC;EAED,OACE;IAAA,WACE,KAAC,cAAc;MACb,SAAS,EAAEF,SAAU;MACrB,UAAU,EAAEC,SAAU;MACtB,aAAa,EAAEE;IAAa,EAC5B,EACF,KAAC,YAAY;MAAC,KAAK,EAAEP,MAAM,CAACD,IAAI,CAAE;MAAC,OAAO,EAAEG,OAAO,CAACH,IAAI;IAAE,EAAG;EAAA,EAC5D;AAEP;AAEA,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}