{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"width\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport TextInput from \"../TextInput\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AppFormField(_ref) {\n  var name = _ref.name,\n    width = _ref.width,\n    otherProps = _objectWithoutProperties(_ref, _excluded);\n  var _useFormikContext = useFormikContext(),\n    setFieldTouched = _useFormikContext.setFieldTouched,\n    handleChange = _useFormikContext.handleChange,\n    errors = _useFormikContext.errors,\n    touched = _useFormikContext.touched;\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextInput, _objectSpread({\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      onChangeText: handleChange(name),\n      width: width\n    }, otherProps)), _jsx(ErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\nexport default AppFormField;","map":{"version":3,"names":["React","useFormikContext","TextInput","ErrorMessage","AppFormField","name","width","otherProps","setFieldTouched","handleChange","errors","touched"],"sources":["/Users/salt-dev/bootCamp/week13/day2/Final-Project/MobileApp/app/components/forms/FormField.js"],"sourcesContent":["import React from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport TextInput from \"../TextInput\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction AppFormField({ name, width, ...otherProps }) {\n  const { setFieldTouched, handleChange, errors, touched } = useFormikContext();\n\n  return (\n    <>\n      <TextInput\n        onBlur={() => setFieldTouched(name)}\n        onChangeText={handleChange(name)}\n        width={width}\n        {...otherProps}\n      />\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\n    </>\n  );\n}\n\nexport default AppFormField;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAAuB;AAAA;AAAA;AAE1C,SAASC,YAAY,OAAiC;EAAA,IAA9BC,IAAI,QAAJA,IAAI;IAAEC,KAAK,QAALA,KAAK;IAAKC,UAAU;EAChD,wBAA2DN,gBAAgB,EAAE;IAArEO,eAAe,qBAAfA,eAAe;IAAEC,YAAY,qBAAZA,YAAY;IAAEC,MAAM,qBAANA,MAAM;IAAEC,OAAO,qBAAPA,OAAO;EAEtD,OACE;IAAA,WACE,KAAC,SAAS;MACR,MAAM,EAAE;QAAA,OAAMH,eAAe,CAACH,IAAI,CAAC;MAAA,CAAC;MACpC,YAAY,EAAEI,YAAY,CAACJ,IAAI,CAAE;MACjC,KAAK,EAAEC;IAAM,GACTC,UAAU,EACd,EACF,KAAC,YAAY;MAAC,KAAK,EAAEG,MAAM,CAACL,IAAI,CAAE;MAAC,OAAO,EAAEM,OAAO,CAACN,IAAI;IAAE,EAAG;EAAA,EAC5D;AAEP;AAEA,eAAeD,YAAY"},"metadata":{},"sourceType":"module"}