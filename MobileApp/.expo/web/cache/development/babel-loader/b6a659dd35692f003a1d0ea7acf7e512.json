{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Text from \"./Text\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\nimport Screen from \"./Screen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction AppPicker(_ref) {\n  var icon = _ref.icon,\n    items = _ref.items,\n    _ref$numberOfColumns = _ref.numberOfColumns,\n    numberOfColumns = _ref$numberOfColumns === void 0 ? 1 : _ref$numberOfColumns,\n    onSelectItem = _ref.onSelectItem,\n    _ref$PickerItemCompon = _ref.PickerItemComponent,\n    PickerItemComponent = _ref$PickerItemCompon === void 0 ? PickerItem : _ref$PickerItemCompon,\n    placeholder = _ref.placeholder,\n    selectedItem = _ref.selectedItem,\n    _ref$width = _ref.width,\n    width = _ref$width === void 0 ? \"100%\" : _ref$width;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsxs(View, {\n        style: [styles.container, {\n          width: width\n        }],\n        children: [icon && _jsx(MaterialCommunityIcons, {\n          name: icon,\n          size: 20,\n          color: defaultStyles.colors.medium,\n          style: styles.icon\n        }), selectedItem ? _jsx(Text, {\n          style: styles.text,\n          children: selectedItem.label\n        }) : _jsx(Text, {\n          style: styles.placeholder,\n          children: placeholder\n        }), _jsx(MaterialCommunityIcons, {\n          name: \"chevron-down\",\n          size: 20,\n          color: defaultStyles.colors.medium\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      children: _jsxs(Screen, {\n        children: [_jsx(Button, {\n          title: \"Close\",\n          onPress: function onPress() {\n            return setModalVisible(false);\n          }\n        }), _jsx(FlatList, {\n          data: items,\n          keyExtractor: function keyExtractor(item) {\n            return item.value.toString();\n          },\n          numColumns: numberOfColumns,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(PickerItemComponent, {\n              item: item,\n              label: item.label,\n              onPress: function onPress() {\n                setModalVisible(false);\n                onSelectItem(item);\n              }\n            });\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  placeholder: {\n    color: defaultStyles.colors.medium,\n    flex: 1\n  },\n  text: {\n    flex: 1\n  }\n});\nexport default AppPicker;","map":{"version":3,"names":["React","useState","MaterialCommunityIcons","Text","defaultStyles","PickerItem","Screen","AppPicker","icon","items","numberOfColumns","onSelectItem","PickerItemComponent","placeholder","selectedItem","width","modalVisible","setModalVisible","styles","container","colors","medium","text","label","item","value","toString","StyleSheet","create","backgroundColor","light","borderRadius","flexDirection","padding","marginVertical","marginRight","color","flex"],"sources":["/Users/salt-dev/bootCamp/week13/day2/Final-Project/MobileApp/app/components/Picker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  FlatList,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport Text from \"./Text\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\nimport Screen from \"./Screen\";\n\nfunction AppPicker({\n  icon,\n  items,\n  numberOfColumns = 1,\n  onSelectItem,\n  PickerItemComponent = PickerItem,\n  placeholder,\n  selectedItem,\n  width = \"100%\",\n}) {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\n        <View style={[styles.container, { width }]}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={defaultStyles.colors.medium}\n              style={styles.icon}\n            />\n          )}\n          {selectedItem ? (\n            <Text style={styles.text}>{selectedItem.label}</Text>\n          ) : (\n            <Text style={styles.placeholder}>{placeholder}</Text>\n          )}\n\n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={defaultStyles.colors.medium}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <Screen>\n          <Button title=\"Close\" onPress={() => setModalVisible(false)} />\n          <FlatList\n            data={items}\n            keyExtractor={(item) => item.value.toString()}\n            numColumns={numberOfColumns}\n            renderItem={({ item }) => (\n              <PickerItemComponent\n                item={item}\n                label={item.label}\n                onPress={() => {\n                  setModalVisible(false);\n                  onSelectItem(item);\n                }}\n              />\n            )}\n          />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.light,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  placeholder: {\n    color: defaultStyles.colors.medium,\n    flex: 1,\n  },\n  text: {\n    flex: 1,\n  },\n});\n\nexport default AppPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}