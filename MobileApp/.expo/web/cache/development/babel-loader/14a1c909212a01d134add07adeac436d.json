{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Yup from \"yup\";\nimport Screen from \"../components/Screen\";\nimport { ErrorMessage, Form, FormField, SubmitButton } from \"../components/forms\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar users = [{\n  id: 1,\n  name: \"bilal\",\n  email: \"bilal@domain.com\",\n  password: \"12345\"\n}, {\n  id: 2,\n  name: \"Mattias\",\n  email: \"Mattias@domain.com\",\n  password: \"12345\"\n}];\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\")\n});\nfunction LoginScreen(props) {\n  var auth = useAuth();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginFailed = _useState2[0],\n    setLoginFailed = _useState2[1];\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var email = _ref.email,\n        password = _ref.password;\n      var result = yield authApi.login(email, password);\n      console.log(result);\n      if (!result.ok) return setLoginFailed(true);\n      setLoginFailed(false);\n      auth.logIn(result.data);\n    });\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Screen, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.logo,\n      source: require(\"../assets/logo-red.png\")\n    }), _jsxs(Form, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: handleSubmit,\n      validationSchema: validationSchema,\n      children: [_jsx(ErrorMessage, {\n        error: \"Invalid email and/or password.\",\n        visible: loginFailed\n      }), _jsx(FormField, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        icon: \"email\",\n        keyboardType: \"email-address\",\n        name: \"email\",\n        placeholder: \"Email\",\n        textContentType: \"emailAddress\"\n      }), _jsx(FormField, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        icon: \"lock\",\n        name: \"password\",\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        textContentType: \"password\"\n      }), _jsx(SubmitButton, {\n        title: \"Login\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","Yup","Screen","ErrorMessage","Form","FormField","SubmitButton","authApi","useAuth","users","id","name","email","password","validationSchema","object","shape","string","required","label","min","LoginScreen","props","auth","loginFailed","setLoginFailed","handleSubmit","result","login","console","log","ok","logIn","data","styles","container","logo","require","StyleSheet","create","padding","width","height","alignSelf","marginTop","marginBottom"],"sources":["/Users/salt-dev/bootCamp/week13/day2/Final-Project/MobileApp/app/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Image } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport Screen from \"../components/Screen\";\nimport {\n  ErrorMessage,\n  Form,\n  FormField,\n  SubmitButton,\n} from \"../components/forms\";\nimport authApi from \"../api/auth\";\nimport useAuth from \"../auth/useAuth\";\n\n\nconst users = [\n  {\n    id: 1,\n    name: \"bilal\",\n    email: \"bilal@domain.com\",\n    password: \"12345\",\n  },\n  {\n    id: 2,\n    name: \"Mattias\",\n    email: \"Mattias@domain.com\",\n    password: \"12345\",\n  },\n];\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required().email().label(\"Email\"),\n  password: Yup.string().required().min(4).label(\"Password\"),\n});\n\nfunction LoginScreen(props) {\n  const auth = useAuth();\n  const [loginFailed, setLoginFailed] = useState(false);\n\n  const handleSubmit = async ({ email, password }) => {\n    const result = await authApi.login(email, password);\n    console.log(result);\n    if (!result.ok) return setLoginFailed(true);\n    setLoginFailed(false);\n    auth.logIn(result.data);\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <Image style={styles.logo} source={require(\"../assets/logo-red.png\")} />\n\n      <Form\n        initialValues={{ email: \"\", password: \"\" }}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <ErrorMessage\n          error=\"Invalid email and/or password.\"\n          visible={loginFailed}\n        />\n        <FormField\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          icon=\"email\"\n          keyboardType=\"email-address\"\n          name=\"email\"\n          placeholder=\"Email\"\n          textContentType=\"emailAddress\"\n        />\n        <FormField\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          icon=\"lock\"\n          name=\"password\"\n          placeholder=\"Password\"\n          secureTextEntry\n          textContentType=\"password\"\n        />\n        <SubmitButton title=\"Login\" />\n      </Form>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    alignSelf: \"center\",\n    marginTop: 50,\n    marginBottom: 20,\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}